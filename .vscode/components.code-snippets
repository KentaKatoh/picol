{
	"TSX Component": {
		"scope": "typescriptreact",
		"prefix": "component",
		"body": [
			"import { CreateElement, VNode } from 'vue';",
			"import { Component, Prop, Vue } from 'vue-property-decorator';",
			"",
			"@Component<${1:Test}>({",
			"  components: {},",
			"})",
			"export default class ${2:Test} extends Vue {",
			"  @Prop({ type: String })",
			"  txt!: string;",
			"",
			"  @Prop({ type: Boolean, default: false })",
			"  hidden!: boolean;",
			"",
			"  get something() {",
			"    return this.txt",
			"  }",
			"",
			"  render(h: CreateElement): VNode {",
			"    const content = this.hidden ? undefined : <spen>{this.something}</spen>",
			"",
			"    return (",
			"      <div>",
			"        <p>{content}</p>",
			"      </div>",
			"    );",
			"  }",
			"}",
			""
		],
		"description": "Log output to console"
	},
	"Vue Component": {
		"scope": "vue",
		"prefix": "component",
		"body": [
			"<template>",
			"  <div>",
			"    <p><span v-if=\"this.hidden\">{{this.content}}</span></p>",
			"  </div>",
			"</template>",
			"",
			"<script lang=\"ts\">",
			"import { CreateElement, VNode } from 'vue';",
			"import { Component, Prop, Vue } from 'vue-property-decorator';",
			"",
			"@Component<${1:Test}>({",
			"  components: {},",
			"})",
			"export default class ${2:Test} extends Vue {",
			"  @Prop({ type: String })",
			"  txt!: string;",
			"",
			"  @Prop({ type: Boolean, default: false })",
			"  hidden!: boolean;",
			"",
			"  get something() {",
			"    return this.txt",
			"  }",
			"}",
			"</script>",
			"",
			"<style scoped>",
			"</style>",
			""
		],
		"description": "Log output to console"
	}
}
